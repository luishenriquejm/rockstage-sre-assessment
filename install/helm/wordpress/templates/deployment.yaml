apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  labels:
    app: {{ .Values.appname }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.appname }}
      tier: {{ .Values.tier }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
        tier: {{ .Values.tier }}
    spec:
      initContainers:
        - name: init-is-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z {{ .Values.database.host }} 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
      containers:
      - image: yuribucci/wordpress_custom:2.1
        name: wordpress
        env:
        
        - name: WORDPRESS_DB_HOST
          value: {{ .Values.database.host }}
        
        - name: WORDPRESS_DB_USER
          value: root
        
        - name: WORDPRESS_DB_NAME
          value: {{ .Values.database.name }}

        - name: WORDPRESS_DEBUG
          value: "1"

        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.appname }}-secret
              key: mysql-root-password
        ports:
        - containerPort: 80
          name: {{ .Values.appname }}

        volumeMounts:

        - name: {{ .Values.appname }}
          mountPath: "/var/www/html"

        - name: {{ .Values.appname }}-database
          mountPath: /sql/init.sql
          subPath: init.sql

        - name: {{ .Values.appname }}-entrypoint
          mountPath: /usr/local/bin/entrypoint.sh
          subPath: entrypoint.sh

      volumes:
      - name: {{ .Values.appname }}
        persistentVolumeClaim:
          claimName: {{ .Values.appname }}

      - name: {{ .Values.appname }}-entrypoint
        configMap:
          name: {{ .Values.appname }}-entrypoint
          defaultMode: 0777

      - name: {{ .Values.appname }}-database
        configMap:
          name: {{ .Values.appname }}-database