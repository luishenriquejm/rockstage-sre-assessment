apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.appname }}
  labels: 
    app: {{ .Values.appname }}
    tier: {{ .Values.tier }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appname }}
      tier: {{ .Values.tier }}
  serviceName: {{ .Values.appname }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
        tier: {{ .Values.tier }}
    spec:
      serviceAccountName: {{ .Values.appname }}
      affinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: {{ .Values.appname }}
                    tier: {{ .Values.tier }}
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
      securityContext:
        fsGroup: 0
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:latest
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 0
          env:
            - name: BITNAMI_DEBUG
              value: "false"

            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appname }}
                  key: mysql-root-password
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql

            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
            
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: config
          configMap:
            name: {{ .Values.appname }}

        - name: mysql-initdb
          configMap:
            name: {{ .Values.appname }}-database

  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: {{ .Values.appname }}
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "{{ .Values.storage.size }}"
        storageClassName: {{ .Values.storage.className }}
