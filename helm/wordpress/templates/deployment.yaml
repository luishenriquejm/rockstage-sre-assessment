apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  labels:
    app: {{ .Values.appname }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.appname }}
      tier: {{ .Values.tier }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
        tier: {{ .Values.tier }}
    spec:
      initContainers:
        # - name: init-is-db
        #   image: busybox:1.31
        #   command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z {{ .Values.database.service }} 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
        - name: init-is-db
          image: "arey/mysql-client"
          command: ['"y-h wordpress-db-mysql.database.svc.cluster.local" -u root -psecret --execute='CREATE DATABASE TESTE;']          
      containers:
      - image: wordpress:latest
        name: wordpress
        env:
        
        - name: WORDPRESS_DB_HOST
          value: {{ .Values.database.host }}
        
        - name: WORDPRESS_DB_USER
          value: {{ .Values.database.user }}
        
        - name: WORDPRESS_DB_NAME
          value: {{ .Values.database.name }}

        - name: WORDPRESS_DEBUG
          value: "1"

        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secretName }}
              key: {{ .Values.database.key }}
        ports:
        - containerPort: 80
          name: {{ .Values.appname }}
        volumeMounts:
        - name: {{ .Values.appname }}
          mountPath: "/var/www/html"
      volumes:
      - name: {{ .Values.appname }}
        persistentVolumeClaim:
          claimName: {{ .Values.appname }}