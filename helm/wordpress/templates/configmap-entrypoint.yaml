apiVersion: v1
kind: ConfigMap
metadata:
  name:  {{ .Values.appname }}-entrypoint
data:
  entrypoint.sh: |-
      #!/usr/bin/env bash
      DBNAME="{{ .Values.database.name }}"
      DBEXISTS=$(mysql --batch --skip-column-names -h wordpress-db-mysql.database.svc.cluster.local -u root -psecret -e "SHOW DATABASES LIKE '"$DBNAME"';" | grep "$DBNAME" > /dev/null; echo "$?")
      if [ $DBEXISTS -eq 0 ];then
        sh /usr/local/bin/docker-entrypoint.sh
      else
        mysql -h wordpress-db-mysql.database.svc.cluster.local -u root -psecret -e "CREATE DATABASE {{ .Values.database.name }}"
        mysql -h wordpress-db-mysql.database.svc.cluster.local -u root -psecret -e "CREATE USER '{{ .Values.database.user }}'@'%' IDENTIFIED BY '{{ .Values.database.user_password }}';"
        mysql -h wordpress-db-mysql.database.svc.cluster.local -u root -psecret -e "GRANT ALL PRIVILEGES ON {{ .Values.database.name }}.* TO '{{ .Values.database.user }}'@'%' WITH GRANT OPTION;"
        mysql -h wordpress-db-mysql.database.svc.cluster.local -u root -psecret -e "CREATE DATABASE FLUSH PRIVILEGES;"
        mysql -h wordpress-db-mysql.database.svc.cluster.local -u root -psecret {{ .Values.database.name }} < /sql/init.sql
        sh /usr/local/bin/docker-entrypoint.sh